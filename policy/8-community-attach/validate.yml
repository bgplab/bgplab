session:
  description: Check EBGP session with RTR
  fail: The EBGP session with your router is not established
  pass: The EBGP session with RTR is in Established state
  devices: [ frr, cumulus, eos ]
  nodes: [ x1, x2 ]
  plugin: bgp_neighbor(node.bgp.neighbors,'c1')
  stop_on_error: True

c_pfx:
  description: Check customer prefix advertisement
  pass: C1 is advertising its IPv4 prefix
  fail: C1 is not advertising its IPv4 prefix
  nodes: [ x1, x2 ]
  plugin: bgp_prefix(nodes.c1.bgp.originate[0],peer=nodes.c1.bgp.router_id)

community:
  description: Check the community attached to EBGP update sent from C1
  nodes: [ x2 ]
  plugin: >-
    bgp_prefix(
      nodes.c1.bgp.originate[0],
      peer=nodes.c1.bgp.router_id,
      community={'community': '65304:100'})

locpref:
  description: Check the local preference of EBGP path advertised by C1
  nodes: [ x2 ]
  plugin: >-
    bgp_prefix(
      nodes.c1.bgp.originate[0],
      peer=nodes.c1.bgp.router_id,
      locpref=50)

best:
  description: Check that X2 prefers the path going through X1
  nodes: [ x2 ]
  plugin: >-
    bgp_prefix(
      nodes.c1.bgp.originate[0],
      peer=nodes.x1.bgp.router_id,
      best=True)
